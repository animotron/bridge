<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.animotron</groupId>
	<artifactId>bridge</artifactId>
	<version>0.0.9-SNAPSHOT</version>
	<name>Animo bridge</name>

	<developers>
		<developer>
			<name>Dmitiry Shabanov</name>
			<email>shabanovd@gmail.com</email>
		</developer>
		<developer>
			<name>Evgeny Gazdovsky</name>
			<email>gazdovsky@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<jettyVersion>8.1.0.v20120127</jettyVersion>
		<!-- <jettyVersion>8.1.1.v20120215</jettyVersion> -->
		<miltonVersion>1.6.2</miltonVersion>
		<slf4jVersion>1.6.1</slf4jVersion>
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<izpack.standalone.compiler.version>4.3.2</izpack.standalone.compiler.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.animotron</groupId>
			<artifactId>core</artifactId>
			<version>0.0.9-SNAPSHOT</version>
		</dependency>
		<!-- logger -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4jVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4jVersion}</version>
		</dependency>
		<!-- servlet container -->
		<!-- <dependency> <groupId>javax</groupId> <artifactId>javaee-api</artifactId> 
			<version>6.0</version> <type>jar</type> <scope>compile</scope> </dependency> -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jettyVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-websocket</artifactId>
			<version>${jettyVersion}</version>
		</dependency>

		<!-- Smack is an Open Source XMPP (Jabber) client -->
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smackx</artifactId>
			<version>3.2.1</version>
		</dependency>

		<!-- OAuth -->
		<dependency>
			<groupId>org.scribe</groupId>
			<artifactId>scribe</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- <dependency> <groupId>httpunit</groupId> <artifactId>httpunit</artifactId> 
			<version>1.7</version> <scope>test</scope> </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.8.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- This plugin is needed for the servlet example -->
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jettyVersion}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.animotron.web.bridge.JettyHttpServer</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>create-staging-area</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy todir="${staging.dir}">
									<fileset dir="${basedir}/src/izpack" />
								</copy>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.2</version>
				<configuration>
					<assembleDirectory>${staging.dir}</assembleDirectory>
					<programs>
						<program>
							<mainClass>org.animotron.bridge.web.JettyHttpServer</mainClass>
							<name>animotron</name>
						</program>
					</programs>
					<daemons>
						<daemon>
							<id>animobridge</id>
							<mainClass>org.animotron.bridge.web.JettyHttpServer</mainClass>
							<commandLineArguments>
								<commandLineArgument>start</commandLineArgument>
							</commandLineArguments>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>linux-x86-32</include>
										<include>linux-x86-64</include>
									</includes>
									<configuration>
										<property>
											<name>configuration.directory.in.classpath.first</name>
											<value>etc</value>
										</property>
										<property>
											<name>set.default.REPO_DIR</name>
											<value>lib</value>
										</property>
										<property>
											<name>wrapper.logfile</name>
											<value>logs/wrapper.log</value>
										</property>
										<property>
											<name>run.as.user.envvar</name>
											<value>animo</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
							<jvmSettings>
								<initialMemorySize>256M</initialMemorySize>
								<maxMemorySize>1024M</maxMemorySize>
								<systemProperties>
									<systemProperty>java.security.policy=conf/policy.all</systemProperty>
									<systemProperty>com.sun.management.jmxremote</systemProperty>
									<systemProperty>com.sun.management.jmxremote.port=8999</systemProperty>
									<systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty>
									<systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty>
								</systemProperties>
								<extraArguments>
									<extraArgument>-server</extraArgument>
								</extraArguments>
							</jvmSettings>
						</daemon>
					</daemons>
				</configuration>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-program-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-dependency-plugin</artifactId> 
				<version>2.4</version> <executions> <execution> <id>copy</id> <phase>package</phase> 
				<goals> <goal>copy-dependencies</goal> </goals> <configuration> <outputDirectory>${staging.dir}/dependency</outputDirectory> 
				</configuration> </execution> </executions> </plugin> -->

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>war</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<encoding>UTF-8</encoding>
							<outputDirectory>${staging.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>1.0-alpha-5</version>
				<configuration>
					<izpackBasedir>${staging.dir}</izpackBasedir>
					<customPanelDirectory>${staging.dir}</customPanelDirectory>
				</configuration>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-standalone-compiler</artifactId>
						<version>${izpack.standalone.compiler.version}</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>ettrema-repo</id>
			<url>http://www.ettrema.com/maven2</url>
		</repository>
	</repositories>

</project>
